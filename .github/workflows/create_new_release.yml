name: Check and Create Release

on:
  workflow_dispatch: # Manually trigger the workflow

env:
  CREATE_RELEASE: 'false'

jobs:
  check-version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Read version from file
        id: read-version
        run: echo "VERSION=$(cat ./.git/haloarmory_version)" >> $GITHUB_ENV

      - name: Get latest release
        id: get-latest-release
        run: |
          latest_release=$(curl -s "https://api.github.com/repos/${{ github.repository }}/releases/latest" | jq -r .tag_name)
          echo "LATEST_RELEASE=$latest_release" >> $GITHUB_ENV

      - name: Compare versions
        id: compare-versions
        run: |
          if [[ "${{ env.VERSION }}" != "${{ env.LATEST_RELEASE }}" ]]; then
            echo "Versions are different. Creating a new release..."
            echo "CREATE_RELEASE=true" >> $GITHUB_ENV
          else
            echo "Versions match. No need to create a new release."
            echo "CREATE_RELEASE=false" >> $GITHUB_ENV
          fi

  create-release:
    needs: check-version
    runs-on: ubuntu-latest
    if: ${{ github.CREATE_RELEASE == 'true' }}
    steps:
      - name: Create release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ env.VERSION }}
          release_name: Release ${{ env.VERSION }}
          body: |
            Release notes for version ${{ env.VERSION }}
          draft: false
          prerelease: false
